The Document Object Model, or DOM for short, is a platform and language 
independent model to represent the HTML or XML documents. It defines the 
logical structure of the documents and the way in which they can be accessed 
and manipulated by an application program

In the DOM, all parts of the document, such as elements, attributes, text, etc.
 are organized in a hierarchical tree-like structure

 <!DOCTYPE html>
<html>
<head>
    <title>My Page</title>
</head>
<body>
    <h1>Helllo</h1>
</body>
</html>

Selecting DOM Elements in JavaScript

You can select an element based on its unique ID with the getElementById()
 method. This is the easiest way to find an HTML element in the DOM tree.


<nav>
  <a>Home</a>
  <a>About</a>
  <a>Contact</a>
  <a style="display: none">Pricing</a>
</nav>
Getting content with innerHTML
// Reading content with innerHTML
const navElement = document.querySelector('nav')
console.log(navElement.innerHTML)

 The innerHTML property returns the full content including all the HTML tags 
 inside the nav elements and their text content.

 Getting content with innerText
// Reading content with innerText
const navElement = document.querySelector('nav')
console.log(navElement.innerText)

The innerText property returns the content as rendered on the screen. 
It ignores all the HTML tags. And it also ignores the hidden element 
(with display set to none).


Getting content with textContent
// Reading content with textContent
const navElement = document.querySelector('nav')
console.log(navElement.textContent)

The textContent property returns the content as it in the HTML markup. Like innerText, it also ignores the HTML tags. But 
it doesn't consider styles, so it returns the "Pricing" text even though 
it's hidden