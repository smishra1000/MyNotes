JavaScript conditional statements allow you to execute specific blocks 
of code based on conditions. If the condition is met, a particular block 
of code will run; otherwise, another block of code will execute based on 
the condition.

if statement	Executes a block of code if a specified condition is true.
else statement	Executes a block of code if the same condition of the preceding if statement is false.
else if statement	Adds more conditions to the if statement, allowing for multiple alternative conditions to be tested.
switch statement	Evaluates an expression, then executes the case statement that matches the expressionâ€™s value.
ternary operator	Provides a concise way to write if-else statements in a single line.


1. Using if Statement
The if statement is used to evaluate a particular condition. If the 
condition holds true, the associated code block is executed.

if ( condition ) {
    // If the condition is met, 
    //code  will get executed.
}

let num = 20;

if (num % 2 === 0) {
    console.log("Given number is even number.");
}

if (num % 2 !== 0) {
    console.log("Given number is odd number.");
};


2. Using if-else Statement
The if-else statement will perform some action for a specific condition.
 Here we are using the else statement in which the else statement 
 is written after the if statement and it has no condition in their
  code block.

  let age = 25;

if (age >= 18) {
    console.log("You are eligible of driving licence")
} else {
    console.log("You are not eligible for driving licence")
};


3. else if Statement
The else if statement in JavaScript allows handling multiple possible conditions and outputs, evaluating more than two options based on whether the conditions are true or false.

Syntax:

if (1st condition) {
    // Code for 1st condition
} else if (2nd condition) {
    // ode for 2nd condition
} else if (3rd condition) {
    // Code for 3rd condition
} else {
    //  ode that will execute if all 
    // above conditions are false
}

const num = 0;

if (num > 0) {
    console.log("Given number is positive.");
} else if (num < 0) {
    console.log("Given number is negative.");
} else {
    console.log("Given number is zero.");
};

4. Using Switch Statement (JavaScript Switch Case)
As the number of conditions increases, you can use multiple else-if 
statements in JavaScript. but when we dealing with many conditions, 
the switch statement may be a more preferred option

const marks = 85;

let Branch;

switch (true) {
    case marks >= 90:
        Branch = "Computer science engineering";
        break;
    case marks >= 80:
        Branch = "Mechanical engineering";
        break;
    case marks >= 70:
        Branch = "Chemical engineering";
        break;
    case marks >= 60:
        Branch = "Electronics and communication";
        break;
    case marks >= 50:
        Branch = "Civil engineering";
        break;
    default:
        Branch = "Bio technology";
        break;
}

console.log(`Student Branch name is : ${Branch}`);