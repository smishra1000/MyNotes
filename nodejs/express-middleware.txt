Middleware functions are functions that have access to the request 
object (req), the response object (res), and the next middleware
 function in the applicationâ€™s request-response cycle. These functions 
 are used to modify req and res objects for tasks like parsing request 
 bodies, adding response headers, etc.

var express = require('express');
var app = express();

//Simple request time logger
app.use(function(req, res, next){
   console.log("A new request received at " + Date.now());
   
   //This function call is very important. It tells that more processing is
   //required for the current request and is in the next middleware
   function route handler.
   next();
});

app.listen(3000); 

The above middleware is called for every request on the server


-------------------Route level midleware, 

//Middleware function to log request protocol
app.use('/things', function(req, res, next){
   console.log("A request for things received at " + Date.now());
   next();
});

// Route handler that sends the response
app.get('/things', function(req, res){
   res.send('Things');
});
