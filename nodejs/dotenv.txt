In Node.js, the dotenv module is used to load environment variables from
 a .env file into process.env. This allows you to separate sensitive
  configuration data (such as API keys, database credentials, or other
   environment-specific settings) from your source code, making your 
   application more secure and easier to manage across different
    environments (e.g., development, testing, production).


How dotenv Works
Install dotenv

First, you need to install the dotenv package using npm:

npm install dotenv

Create a .env File

In the root of your project, create a file named .env. This file will 
contain your environment variables:

PORT=3000
DATABASE_URL=mongodb://localhost:27017/mydatabase
API_KEY=your-api-key-here

Load the .env File in Your Application

In your main application file (e.g., index.js), load the environment variables by requiring and configuring dotenv:


require('dotenv').config();

const express = require('express');
const app = express();

const port = process.env.PORT || 3000;
const databaseUrl = process.env.DATABASE_URL;
const apiKey = process.env.API_KEY;

app.get('/', (req, res) => {
  res.send('Hello, World!');
});

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
  console.log(`Database URL: ${databaseUrl}`);
  console.log(`API Key: ${apiKey}`);
});